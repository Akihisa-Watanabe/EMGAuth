[tool.poetry]
name = "biometric-verification-experiments"
version = "0.1.0"
description = ""
authors = ["Akihisa-Watanabe <akihisa20030102@gmail.com>"]
readme = "README.md"
packages = [{include = "biometric_verification_experiments"}]

[tool.poetry.dependencies]
python = ">=3.10,<3.11"
scikit-learn = "^1.2.0"
pandas = "^1.5.2"
numpy = "^1.23.4"
tqdm = "^4.64.1"
matplotlib = "^3.6.2"
optuna = "^3.0.3"
scipy = "1.8.1"
lightgbm = "^3.3.3"
imblearn = "^0.0"
llvmlite = "^0.39.1"
numba = "^0.56.3"
tslearn = "^0.5.2"
h5py = "^3.7.0"
tables = "^3.8.0"
neurokit2 = "^0.2.2"
pyyaml = "^6.0"
torch = "^1.13.1"
pytorch-metric-learning = "^1.6.3"
torchvision = "^0.14.1"
plotly = "^5.13.1"
pre-commit = "^3.2.2"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
mypy = "^1.0.1"
isort = "^5.12.0"
flake8 = "^6.0.0"
types-tqdm = "^4.64.7.13"

[tool.mypy]
# エラー時のメッセージを詳細表示
show_error_context = true
# エラー発生箇所の行数/列数を表示
show_column_numbers = true
# import 先のチェックを行わない (デフォルトだとサードパーティーライブラリまでチェックする)
ignore_missing_imports = true
# 関数定義の引数/戻り値に型アノテーション必須
disallow_untyped_defs = true
# デフォルト引数に None を取る場合型アノテーションに Optional 必須
no_implicit_optional = true
# 戻り値が Any 型ではない関数の戻り値の型アノテーションが Any のとき警告
warn_return_any = true
# mypy エラーに該当しない箇所に `# type: ignore` コメントが付与されていたら警告
# ※ `# type: ignore` が付与されている箇所は mypy のエラーを無視出来る
warn_unused_ignores = true
# 冗長なキャストに警告
warn_redundant_casts = true

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
line_length = 100

[tool.flake8]
max-line-length = 100
# E203: ":"の前の空白を入れないルール
# W503: 演算子の前に改行しないようにするルール
extend-ignore = ["E203", "W503"]
exclude = [".venv", ".git", "__pycache__",]
max-complexity = 10
